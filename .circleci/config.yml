version: 2
jobs:
  checkout_code: &base
    working_directory: ~/tabula-api
    docker:
      - image: circleci/clojure:lein-2.8.1
    environment:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # Store repo caches for following jobs
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/tabula-api
  test_and_static_analysis:
    <<: *base
    steps:
      # Restore repo caches from checkout_code job
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Restore m2 caches from previous build
      - restore_cache:
          key: v2-m2-{{ checksum "project.clj" }}
      # Do testing, generate code coverage report, do static analysis,
      # check dependency vulnerabilities and upload coverage report
      - run: "lein do \
                  cloverage --codecov --no-html, \
                  cljfmt check, kibit, eastwood, bikeshed -v, nvd check && \
              bash <(curl -s https://codecov.io/bash)"
      # Store m2 caches for next build
      - save_cache:
          key: v2-m2-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
  build:
    <<: *base
    steps:
      # Restore repo caches from checkout_code job
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Restore m2 caches from previous build
      - restore_cache:
          key: v2-m2-{{ checksum "project.clj" }}
      # Compile uberjar and prepare artifact directory
      - run: "lein uberjar && \
              mkdir -p /tmp/artifacts && \
              cp \
                  target/tabula-api-$(cat VERSION)-standalone.jar \
                  /tmp/artifacts/tabula-api-$(cat VERSION)-standalone.jar"
      # Store the artifact directories
      - store_artifacts:
          path: /tmp/artifacts
          destination: artifacts
      # Store artifacts as cache for release step
      - save_cache:
          key: v2-artifacts-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /tmp/artifacts
  release:
    working_directory: /home/circleci/tabula-api
    docker:
      - image: gavinkflam/ghr-alpine:0.10.0
    steps:
      # Update CA certificates and install git
      - run: "apk add --update --no-cache git ca-certificates && \
              update-ca-certificates"
      # Restore repo caches from checkout_code job
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Restore artifacts from cache
      - restore_cache:
          key: v2-artifacts-{{ .Environment.CIRCLE_SHA1 }}
      # Upload artifacts using ghr
      - run: "ghr -t $GITHUB_TOKEN -u $GITHUB_USERNAME -r $GITHUB_REPO_NAME \
                  `git describe --tags` /tmp/artifacts"
workflows:
  version: 2
  test-build-and-release:
    jobs:
      - checkout_code
      - test_and_static_analysis:
          requires:
            - checkout_code
      - build:
          requires:
            - test_and_static_analysis
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v([0-9]+\.[0-9]+\.[0-9]+)/
